---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import homepageImg from "../assets/images/homepage/homepage_img.svg";
import { TEXTS } from "../texts";
import Notification from "../components/Notification.astro";

const content = TEXTS.pages.homepage;

const informatiiUtile = await Astro.glob(
  "./../data/homepage/Informatii_utile/*.md"
);
const notificari = await Astro.glob("./../data/homepage/Notificari/*.md");
---

<Layout>
  <div class="page page-home">
    <section class="row">
      <div class="content">
        <div class="titles">
          <h1 class="title">{content.firstSection.title}</h1>
          <p class="subtitle">{content.firstSection.subtitle}</p>
          <a href={content.firstSection.callToAction.link} class="btn-primary"
            >{content.firstSection.callToAction.text}
          </a>
        </div>
      </div>
      <img src={homepageImg} alt="" class="homepageImg" />
    </section>
    <section>
      <div class="row col-10 center">
        <div class="title">{content.secondSection.title}</div>
        <a href={content.secondSection.callToAction.link} class="btn-primary"
          >{content.secondSection.callToAction.text}
        </a>
      </div>
      <div class="row col-10 center pt-1 responsive">
        <div class="col">
          <div class="subtitle">{content.secondSection.rightPart.title}</div>
          {
            content.secondSection.rightPart.data.map((cardElement) => {
              return (
                <Card
                  imageSrc={cardElement.imageSrc}
                  title={cardElement.title}
                  description={cardElement.description}
                />
              );
            })
          }
        </div>
        <div class="col">
          <div class="subtitle">{content.secondSection.leftPart.title}</div>
          {
            content.secondSection.leftPart.data.map((cardElement) => {
              return (
                <Card
                  imageSrc={cardElement.imageSrc}
                  title={cardElement.title}
                  description={cardElement.description}
                />
              );
            })
          }
        </div>
      </div>
    </section>
    <section>
      <div class="col-10 center">
        <div class="title">{content.thirdSection.title}</div>

        {
          informatiiUtile.map((element) => {
            return <Notification content={element} />;
          })
        }
      </div>
    </section>
    <section>
      <div class="col-10 center">
        <div class="title">{content.fourthSection.title}</div>

        {
          notificari.map((element) => {
            return <Notification content={element} />;
          })
        }
      </div>
    </section>
    <div id="myModal" class="modal">
      <span class="close">&times;</span>

      <div id="caption">
        <img src={content.modal.image.src} alt={content.modal.image.title} />
        <p>
          {
            content.modal.text.map((element) => {
              if (element.link)
                return (
                  <a href={element.link} class="btn-secondary">
                    {element.text}
                  </a>
                );
              else return <p>{element.text}</p>;
            })
          }
        </p>
      </div>
    </div>
  </div>
</Layout>

<style lang="scss">
  .modal {
    display: flex; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 99999; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto;
    background-color: rgb(0, 0, 0);
    background-color: rgba(0, 0, 0, 0.9);

    /* Modal Content (Image) */

    #caption {
      margin-top: 100px; /* Location of the box */

      overflow: auto;
      margin: auto;
      display: block;
      width: 80%;
      max-width: 700px;
      text-align: left;
      background-color: #fcfbfc;
      padding: 10px 1rem;

      p {
        margin: 1rem 0;
      }
    }

    .close {
      position: absolute;
      top: 15px;
      right: 35px;
      color: #3961a7;
      font-size: 40px;
      font-weight: bold;
      transition: 0.3s;

      &:is(:hover, :focus) {
        color: #3961a7;
        text-decoration: none;
        cursor: pointer;
      }
    }
  }
</style>
<script is:inline>
  let span = document.getElementsByClassName("close")[0];

  span.onclick = function () {
    let modal = document.getElementById("myModal");
    modal.style.display = "none";
  };
</script>
